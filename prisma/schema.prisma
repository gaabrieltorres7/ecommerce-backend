// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  createdAt DateTime @default(now())
  isAdmin   Boolean  @default(false)
  Order     Order[]
}

model Product {
  id            String      @id @default(uuid())
  name          String
  description   String
  price         Decimal
  stockQuantity Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  deletedAt     DateTime?
  OrderItem     OrderItem[]
}

model Order {
  id          String      @id @default(uuid())
  userId      String
  orderStatus OrderStatus @default(RECEIVED)
  orderDate   DateTime    @default(now())
  total       Decimal     @default(0)
  OrderItem   OrderItem[]
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  unitPrice Decimal
  subtotal  Decimal
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id])
}

enum OrderStatus {
  CART
  RECEIVED
  PROCESSING
  SHIPPED
  DELIVERED
}
