version: '3.8'

services:
  app:
    build: .
    container_name: challengeApp_dev
    restart: unless-stopped
    ports:
      - '${APP_PORT}:${APP_PORT}'
    volumes:
      - .:/usr/app
      - /usr/app/node_modules
    user: root

    environment:
      TZ: America/Sao_Paulo
      DB_HOST: db
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - challenge-network
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "chown -R appuser:appgroup . && su-exec appuser npm run start:dev"

  db:
    image: postgres:16-alpine
    container_name: challengeDatabase_dev
    restart: always
    ports:
      - '${DB_PORT}:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      TZ: America/Sao_Paulo
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - challenge-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  pgdata:
    driver: local

networks:
  challenge-network:
    driver: bridge
